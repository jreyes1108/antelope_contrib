<chapter Python Pkt Access>
<info>
from antelope.Pkt import *
</info>
<man>
% man pythonPkt
</man>
<pythonfunction>

showPkt(srcname, pkttime, pkt, nbytes, mode = PKT_TERSE)
    print out packet summary, depending on mode:
<example>
PKT_DUMP      hex dump
PKT_UNSTUFF   unstuff, print all samples
PKT_NOSAMPLES unstuff, print no samples
PKT_TERSE     just show the header info
PKT_PEEK      show the first 10 values
</example>

unstuffPkt(srcname, pkttime, pkt, nbytes)
    unstuffPkt unstuffs the input packet, returning packet kind and packet object.
    the result code indicates what kind of packet was unpacked:
<example>
kind    kind of packet
----    --------------
Pkt_wf  waveform packet
Pkt_st  status packet
Pkt_db  database row
Pkt_pf  parameter file
Pkt_cn  control messages
Pkt_rw  binary data
Pkt_ch  character string
Pkt_tp  test packet
</example>
    The packet object has the following methods which return various
    values from the c Packet structure: 
<example>
parts       
time    
PacketType
nchannels
channels(i) 
pf
string
db
dfile
version
</example>

    The parts method returns (net, sta, chan, loc, suffix, subcode)

    The PacketType method returns the packet kind (also
    returned by unstuffPkt) and the corresponding description.

    The channels method takes an index (0..n-1) argument 
    and returns channel object with its own methods:
<example>
calib    calper   chan     cuser1   
cuser2   data     duser1   duser2   
iuser1   iuser2   iuser3   loc      
net      nsamp    samprate segtype  
sta      time     
</example>
    The data method returns all the waveform data in list of integers.

split_srcname(srcname)
    return net, sta, chan, loc, suffix, and subcode corresponding to srcname

join_srcname(net, sta, chan, loc, suffix, subcode)
    return srcname for net, sta, chan, loc, suffix and subcode
